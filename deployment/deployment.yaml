apiVersion: v1
kind: ConfigMap
metadata:
  name: mutating-webhook-configmap
  namespace: webhook-system
data:
  config.labels: "eyJjb3N0LWNlbnRlciI6IjYwMDAxIiwiZW52aXJvbm1lbnQiOiJkZXYiLCJwcm9kdWN0IjoiY2FzaC1zZXJ2aWNlcyIsImNyZWF0b3IiOiJnYTJrdWFsIiwgIm93bmVyIjoiZ2Eya3VhbCJ9Cg=="
#  config.labels: "e30K" #empty label
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mutating-webhook-deployment
  namespace: webhook-system
  labels:
    app: mutating-webhook
  annotations:
    buildVersion: ${buildVersion}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mutating-webhook
  template:
    metadata:
      labels:
        app: mutating-webhook
    spec:
      #pod must be running
      restartPolicy: Always
      containers:
        - name: mutating-webhook
          image: acronhosbx.azurecr.io/mutating-webhook:${tag}
          #imagePullPolicy: Always: the image is pulled every time the pod is started.
          imagePullPolicy: Always
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
          env:
            -  name: LABEL_MAP
               valueFrom:
                 configMapKeyRef:
                   name: mutating-webhook-configmap
                   key: config.labels
      volumes:
        - name: webhook-certs
          secret:
            secretName: mutating-webhook-certs
---
apiVersion: v1
kind: Service
metadata:
  name: mutating-webhook-svc
  namespace: webhook-system
  labels:
    app: mutating-webhook
spec:
  ports:
    - port: 443
      targetPort: 8443
      name: https
  selector:
    app: mutating-webhook
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutating-webhook-cfg
  namespace: webhook-system
  labels:
    app: mutating-webhook
webhooks:
  - name: mutating-webhook.interview.absa.co.za
    clientConfig:
      service:
        name: mutating-webhook-svc
        namespace: webhook-system
        path: "/mutate-labels"
      caBundle: ${caBundle}
    rules:
      - operations: [ "CREATE" ]
        apiGroups: ["apps", ""]
        apiVersions: ["v1"]
        resources: ["pods"]
    namespaceSelector:
      matchLabels:
        mutateme: enabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mutating-webhook-sa
  namespace: webhook-system
  labels:
    app: mutating-webhook
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mutating-webhook-cr
  namespace: webhook-system
  labels:
    app: mutating-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - events
    verbs:
      - "*"
  - apiGroups:
      - apps
    resources:
      - deployments
      - replicasets
    verbs:
      - "*"
  - apiGroups:
      - autoscaling
    resources:
      - '*'
    verbs:
      - '*'
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mutating-webhook-crb
  namespace: webhook-system
  labels:
    app: mutating-webhook
subjects:
  - kind: ServiceAccount
    name: mutating-webhook-sa
    namespace: webhook-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mutating-webhook-cr
